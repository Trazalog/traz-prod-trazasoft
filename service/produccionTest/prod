<data enableBatchRequests="true" enableBoxcarring="true" name="produccionTest" transports="http https local">
   <config enableOData="false" id="produccionTest">
      <property name="carbon_datasource_name">ToolsDataSource</property>
   </config>
   <query id="getCamionEstablecimiento" useConfig="produccionTest">
      <sql>SELECT motr_id as id ,patente,conductor, fecha_entrada as fecha, reci_id&#xd;FROM prd.movimientos_trasportes&#xd;WHERE esta_id = CAST(:esta_id as INTEGER)&#xd;AND estado = 'EN CURSO'&#xd;AND eliminado = FALSE</sql>
      <result outputType="json">{&#xd;    "camiones":{&#xd;        "camion":[&#xd;            {&#xd;                "id":"$id",&#xd;                "patente":"$patente",&#xd;                "conductor":"$conductor",&#xd;                "fecha":"$fecha",&#xd;                "reci_id":"$reci_id"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="esta_id" sqlType="STRING"/>
   </query>
   <query id="getLotesEstablecimiento" useConfig="produccionTest">
      <sql>select lote.lote_id as id, lote.lote_id as titulo, lote.batch_id, arti.arti_id as producto, arti.descripcion as tituloproducto,lotealm.cantidad as stock, lote.fec_alta as fecha, '0' as envase,'-' as tituloenvase &#xd;from prd.lotes lote&#xd;,prd.recipientes as reci&#xd;,alm.alm_depositos as depo&#xd;,alm.alm_lotes as lotealm&#xd;,alm.alm_articulos as arti&#xd;where lote.reci_id = reci.reci_id&#xd;and reci.depo_id = depo.depo_id&#xd;and lote.batch_id = cast(lotealm.batch_id as INTEGER)&#xd;and lotealm.arti_id = arti.arti_id&#xd;and depo.esta_id = cast(:esta_id as INTEGER)&#xd;and reci.tipo = 'DEPOSITO'&#xd;and lote.estado != 'FINALIZADO'</sql>
      <result outputType="json">{&#xd;    "lotes":{&#xd;        "lote":[&#xd;            {&#xd;                "id":"$id",&#xd;                "batch_id":"$batch_id",&#xd;                "titulo":"$titulo",&#xd;                "producto":"$producto",&#xd;                "tituloproducto":"$tituloproducto",&#xd;                "fecha":"$fecha",&#xd;                "stock":"$stock",&#xd;                "envase":"$envase",&#xd;                "tituloenvase":"$tituloenvase"&#xd;&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="esta_id" sqlType="STRING"/>
   </query>
   <query id="setRecipiente" keyColumns="reci_id" returnGeneratedKeys="true" useConfig="produccionTest">
      <sql>INSERT INTO prd.recipientes (tipo,nombre,empr_id,depo_id, motr_id) &#xd;VALUES &#xd;(:tipo,:patente, CAST(:empr_id as INTEGER), CAST(:depo_id as INTEGER), CAST(:motr_id as INTEGER))</sql>
      <result outputType="json">{&#xd; "resultado":{"reci_id":"$reci_id"}&#xd;}</result>
      <param name="tipo" sqlType="STRING"/>
      <param name="patente" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="depo_id" sqlType="STRING"/>
      <param name="motr_id" sqlType="STRING"/>
   </query>
   <query id="extraerCantidadLote" useConfig="produccionTest">
      <sql>update alm.alm_lotes&#xd;set cantidad = cantidad - CAST(:cantidad as FLOAT8)&#xd;where batch_id = CAST(:batch_id as VARCHAR)&#xd;and empr_id = CAST(:empr_id as INTEGER)</sql>
      <param name="cantidad" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="batch_id" sqlType="STRING"/>
   </query>
   <query id="movimientoStock" useConfig="produccionTest">
      <sql>insert&#xd;	into&#xd;	alm.alm_lotes (prov_id,&#xd;	arti_id,&#xd;	depo_id,&#xd;	codigo,&#xd;	fec_vencimiento,&#xd;	cantidad,&#xd;	empr_id,&#xd;	user_id,&#xd;	estado,batch_id)&#xd;select prov_id,&#xd;	arti_id,&#xd;	depo_id,&#xd;	codigo,&#xd;	fec_vencimiento,&#xd;	cast(:cantidad as float8),&#xd;	empr_id,&#xd;	user_id,&#xd;	estado&#xd; ,cast(:batch_id as VARCHAR) from alm.alm_lotes&#xd;where batch_id = CAST(:old_batch_id as VARCHAR)</sql>
      <param name="batch_id" sqlType="STRING"/>
      <param name="cantidad" sqlType="STRING"/>
      <param name="old_batch_id" sqlType="STRING"/>
   </query>
   <query id="getLotesCamion" useConfig="produccionTest">
      <sql>select lo.lote_id, lo.batch_id, lo.reci_id, al.cantidad,  e.nombre establecimiento, al.arti_id, aa.unidad_medida as um&#xd;from &#xd;prd.movimientos_trasportes as mt&#xd;,prd.recipientes as re&#xd;,prd.lotes as lo&#xd;,alm.alm_lotes as al&#xd;,alm.alm_depositos as ad&#xd;,prd.establecimientos as e&#xd;,alm.alm_articulos as aa&#xd;where mt.motr_id = re.motr_id &#xd;and re.reci_id = lo.reci_id&#xd;and al.batch_id = lo.batch_id&#xd;and al.depo_id = ad.depo_id&#xd;and ad.esta_id = e.esta_id&#xd;and al.arti_id = aa.arti_id&#xd;and mt.patente = :patente</sql>
      <result outputType="json">{&#xd;    "lotes":{&#xd;        "lote":[&#xd;            {&#xd;                "lote_id":"$lote_id",&#xd;                "batch_id":"$batch_id",&#xd;                "reci_id":"$reci_id",&#xd;                "cantidad":"$cantidad",&#xd;                "establecimiento":"$establecimiento",&#xd;                "arti_id":"$arti_id",&#xd;                "um":"$um"&#xd;               &#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="patente" sqlType="STRING"/>
   </query>
   <query id="setEntrada" useConfig="produccionTest">
      <sql>INSERT INTO prd.movimientos_trasportes&#xd;(boleta, fecha_entrada, patente, acoplado, conductor, tipo, bruto, tara, neto, prov_id, esta_id, cuit, estado)&#xd;VALUES&#xd;(:boleta, TO_DATE(:fecha,'YYYY-MM-DD'), :patente, :acoplado, :conductor, :tipo, CAST(:bruto as float8), CAST(:tara as float8), CAST(:neto as float8), CAST(:proveedor as INTEGER), CAST(:establecimiento as INTEGER), :cuit, :estado)</sql>
      <param name="boleta" sqlType="STRING"/>
      <param name="patente" sqlType="STRING"/>
      <param name="acoplado" sqlType="STRING"/>
      <param name="conductor" sqlType="STRING"/>
      <param name="tipo" sqlType="STRING"/>
      <param name="bruto" sqlType="STRING"/>
      <param name="tara" sqlType="STRING"/>
      <param name="neto" sqlType="STRING"/>
      <param name="fecha" sqlType="STRING"/>
      <param name="proveedor" sqlType="STRING"/>
      <param name="establecimiento" sqlType="STRING"/>
      <param name="estado" sqlType="STRING"/>
      <param name="cuit" sqlType="STRING"/>
   </query>
   <query id="getLotes" useConfig="produccionTest">
      <sql>select &#xd;lote.batch_id&#xd;,lote.lote_id&#xd;,etap.nombre as titulo&#xd;,'' as producto&#xd;,0 as cantidad&#xd;,'n/a' as unidad&#xd;,esta.nombre as establecimiento&#xd;,reci.nombre as recipiente&#xd;,lote.num_orden_prod as orden&#xd;,lote.estado as estado&#xd;from &#xd;prd.etapas etap&#xd;,prd.establecimientos esta &#xd;,prd.recipientes reci &#xd;,prd.lotes lote &#xd;,alm.alm_depositos depo&#xd;where&#xd;lote.etap_id = etap.etap_id&#xd;and lote.reci_id = reci.reci_id&#xd;and reci.depo_id = depo.depo_id&#xd;and depo.esta_id = esta.esta_id&#xd;and etap.etap_id &lt; 1000</sql>
      <result outputType="json">{&#xd; "etapas": {&#xd; "etapa": [&#xd; {&#xd; "id": "$batch_id",&#xd; "lote": "$lote_id",&#xd; "titulo" : "$titulo",&#xd; "producto" : "$producto",&#xd; "cantidad" : "$cantidad",&#xd; "unidad" : "$unidad" &#xd; ,"establecimiento" : "$establecimiento",&#xd; "recipiente" : "$recipiente",&#xd; "orden" : "$orden",&#xd; "estado" : "$estado"&#xd; }&#xd; ]&#xd; }&#xd;}</result>
   </query>
   <query id="getLote" useConfig="produccionTest">
      <sql>select &#xd;lote.batch_id&#xd;,lote.lote_id&#xd;,lote.fec_alta as fecha&#xd;,etap.nombre as titulo&#xd;,etap.nom_recipiente&#xd;,'' as producto&#xd;,0 as cantidad&#xd;,'n/a' as unidad&#xd;,esta.nombre as establecimiento&#xd;,esta.esta_id&#xd;,reci.nombre as recipiente&#xd;,lote.num_orden_prod as orden&#xd;,lote.estado as estado&#xd;from &#xd;prd.etapas etap&#xd;,prd.establecimientos esta &#xd;,prd.recipientes reci &#xd;,prd.lotes lote &#xd;,alm.alm_depositos depo&#xd;where&#xd;lote.etap_id = etap.etap_id&#xd;and lote.reci_id = reci.reci_id&#xd;and reci.depo_id = depo.depo_id&#xd;and depo.esta_id = esta.esta_id&#xd;and lote.batch_id = cast(:batch_id as integer)</sql>
      <result outputType="json">{ &#xd; "etapa": &#xd; {&#xd;   "id": "$batch_id",&#xd;   "fecha": "$fecha",&#xd;   "lote": "$lote_id",&#xd;   "titulo" : "$titulo",&#xd;   "producto" : "$producto",&#xd;   "cantidad" : "$cantidad",&#xd;   "unidad" : "$unidad", &#xd;   "establecimiento" : "$establecimiento",&#xd;   "esta_id": "$esta_id",&#xd;   "recipiente" : "$recipiente",&#xd;   "reci_estab_nom": "$nom_recipiente",&#xd;   "orden" : "$orden",&#xd;   "estado" : "$estado"&#xd; } &#xd;}</result>
      <param name="batch_id" sqlType="STRING"/>
   </query>
   <query id="getRecipientes" useConfig="produccionTest">
      <sql>select A.*, lo.lote_id, al.arti_id&#xd;from&#xd;(select r.reci_id&#xd;      ,r.nombre&#xd;      ,r.tipo&#xd;      ,r.estado&#xd;      ,r.depo_id&#xd;from prd.recipientes as r&#xd;     ,(select :tipo as tipo) as t&#xd;     ,(select :estado as estado) as e&#xd;where r.tipo = case when t.tipo = 'TODOS' then r.tipo else t.tipo end&#xd;and r.estado = case when e.estado = 'TODOS' then r.estado else e.estado end) A&#xd;left join prd.lotes as lo on A.reci_id = lo.reci_id&#xd;left join alm.alm_lotes as al on al.batch_id = lo.batch_id</sql>
      <result outputType="json">{&#xd;    "recipientes": {&#xd;        "recipiente": [&#xd;            {&#xd;                "reci_id": "$reci_id",&#xd;                "nombre": "$nombre",&#xd;                "tipo": "$tipo",&#xd;                "estado": "$estado",&#xd;                "depo_id": "$depo_id",&#xd;                "arti_id":"$arti_id",&#xd;                "lote_id":"$lote_id"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="tipo" sqlType="STRING"/>
      <param name="estado" sqlType="STRING"/>
   </query>
   <query id="setTabla" useConfig="produccionTest">
      <sql>INSERT INTO alm.utl_tablas&#xd;(tabla, valor, descripcion)&#xd;VALUES(:tabla, :valor, :descripcion);</sql>
      <param name="tabla" sqlType="STRING"/>
      <param name="valor" sqlType="STRING"/>
      <param name="descripcion" sqlType="STRING"/>
   </query>
   <query id="getTransportistas" useConfig="produccionTest">
      <sql>select * from core.transportistas</sql>
      <result outputType="json">{&#xd;    "transportistas":{&#xd;        "transportista":[&#xd;            {&#xd;                "cuit":"$cuit",&#xd;                "razon_social":"$razon_social",&#xd;                "direccion":"$direccion"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
   </query>
   <query id="getRecursos" useConfig="produccionTest">
      <sql>select * &#xd;from prd.recursos as r&#xd;, core.equipos as e&#xd;where r.equi_id = e.equi_id&#xd;and r.tipo = :tipo</sql>
      <result outputType="json">{&#xd;    "recursos":{&#xd;        "recurso":[&#xd;            {&#xd;                "recu_id":"$recu_id",&#xd;                "tipo":"$tipo",&#xd;                "equi_id": "$equi_id",&#xd;                "descripcion":"$descripcion",&#xd;                "codigo":"$codigo"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="tipo" sqlType="STRING"/>
   </query>
   <query id="getRecipientes" useConfig="produccionTest">
      <sql>select A.*, lo.lote_id, al.arti_id, esta_id&#xd;from&#xd;(select r.reci_id&#xd;      ,r.nombre&#xd;      ,r.tipo&#xd;      ,r.estado&#xd;      ,r.depo_id&#xd;      ,esta.esta_id&#xd;from prd.recipientes as r&#xd;join alm.alm_depositos as alde on alde.depo_id = r.depo_id &#xd;join prd.establecimientos as esta on esta.esta_id =  alde.esta_id&#xd;     ,(select :tipo as tipo) as t&#xd;     ,(select :estado as estado) as e&#xd;     ,(select CAST(:esta_id as int4) as esta_id) as estable&#xd;where r.tipo = case when t.tipo = 'TODOS' then r.tipo else t.tipo end&#xd;and r.estado = case when e.estado = 'TODOS' then r.estado else e.estado end &#xd;and esta.esta_id = case when estable.esta_id = 0 then esta.esta_id else estable.esta_id end) A&#xd;left join prd.lotes as lo on A.reci_id = lo.reci_id&#xd;left join alm.alm_lotes as al on al.batch_id = lo.batch_id</sql>
      <result outputType="json">{&#xd;    "recipientes": {&#xd;        "recipiente": [&#xd;            {&#xd;                "reci_id": "$reci_id",&#xd;                "nombre": "$nombre",&#xd;                "tipo": "$tipo",&#xd;                "estado": "$estado",&#xd;                "depo_id": "$depo_id",&#xd;                "arti_id":"$arti_id",&#xd;                "lote_id":"$lote_id",&#xd;                "esta_id":"$esta_id"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="tipo" sqlType="STRING"/>
      <param name="estado" sqlType="STRING"/>
      <param name="esta_id" sqlType="STRING"/>
   </query>
   <resource method="GET" path="/camion_establecimiento/{esta_id}">
      <call-query href="getCamionEstablecimiento">
         <with-param name="esta_id" query-param="esta_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/lotes_establecimiento/{esta_id}">
      <call-query href="getLotesEstablecimiento">
         <with-param name="esta_id" query-param="esta_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/recipientes">
      <call-query href="setRecipiente">
         <with-param name="tipo" query-param="tipo"/>
         <with-param name="patente" query-param="patente"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="depo_id" query-param="depo_id"/>
         <with-param name="motr_id" query-param="motr_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/extraer_cantidad_lote">
      <call-query href="extraerCantidadLote">
         <with-param name="cantidad" query-param="cantidad"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="batch_id" query-param="batch_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/lotes/movimiento_stock">
      <call-query href="movimientoStock">
         <with-param name="batch_id" query-param="batch_id"/>
         <with-param name="cantidad" query-param="cantidad"/>
         <with-param name="old_batch_id" query-param="old_batch_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/camion/lotes/{patente}">
      <call-query href="getLotesCamion">
         <with-param name="patente" query-param="patente"/>
      </call-query>
   </resource>
   <resource method="POST" path="/entradas">
      <call-query href="setEntrada">
         <with-param name="boleta" query-param="boleta"/>
         <with-param name="patente" query-param="patente"/>
         <with-param name="acoplado" query-param="acoplado"/>
         <with-param name="conductor" query-param="conductor"/>
         <with-param name="tipo" query-param="tipo"/>
         <with-param name="bruto" query-param="bruto"/>
         <with-param name="tara" query-param="tara"/>
         <with-param name="neto" query-param="neto"/>
         <with-param name="fecha" query-param="fecha"/>
         <with-param name="proveedor" query-param="proveedor"/>
         <with-param name="establecimiento" query-param="establecimiento"/>
         <with-param name="estado" query-param="estado"/>
         <with-param name="cuit" query-param="cuit"/>
      </call-query>
   </resource>
   <resource method="POST" path="/lotes/movimiento_stock">
      <call-query href="movimientoStock">
         <with-param name="batch_id" query-param="batch_id"/>
         <with-param name="cantidad" query-param="cantidad"/>
         <with-param name="old_batch_id" query-param="old_batch_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/lotes">
      <call-query href="getLotes"/>
   </resource>
   <resource method="GET" path="/lote/{batch_id}">
      <call-query href="getLote">
         <with-param name="batch_id" query-param="batch_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/tabla">
      <call-query href="setTabla">
         <with-param name="tabla" query-param="tabla"/>
         <with-param name="valor" query-param="valor"/>
         <with-param name="descripcion" query-param="descripcion"/>
      </call-query>
   </resource>
   <resource method="GET" path="/transportistas">
      <call-query href="getTransportistas"/>
   </resource>
   <resource method="GET" path="/recursos/{tipo}">
      <call-query href="getRecursos">
         <with-param name="tipo" query-param="tipo"/>
      </call-query>
   </resource>
   <resource method="GET" path="/recipientes/tipo/{tipo}/estado/{estado}/establecimiento/{esta_id}">
      <call-query href="getRecipientes">
         <with-param name="tipo" query-param="tipo"/>
         <with-param name="estado" query-param="estado"/>
         <with-param name="esta_id" query-param="esta_id"/>
      </call-query>
   </resource>
</data>
