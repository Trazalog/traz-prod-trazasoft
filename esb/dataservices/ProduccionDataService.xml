<data enableBatchRequests="true" enableBoxcarring="true" name="ProduccionDataService" transports="http https local">
   <config enableOData="false" id="produccionDS">
      <property name="carbon_datasource_name">ToolsDataSource</property>
   </config>
   <query id="getEstablecimiento" useConfig="produccionDS">
      <sql>SELECT *&#xd; FROM&#xd;prd.establecimientos&#xd;where eliminado = false</sql>
      <result outputType="json">{&#xd; "establecimientos": {&#xd;      "establecimiento": [&#xd;        {&#xd;          "esta_id": "$esta_id",&#xd;          "nombre": "$nombre",&#xd;          "lng": "$lng",&#xd;          "lat": "$lat",&#xd;          "calle": "$calle",&#xd;          "altura": "$altura",&#xd;          "localidad": "$localidad",&#xd;          "estado": "$estado",&#xd;          "pais": "$pais",&#xd;          "fec_alta": "$fec_alta",&#xd;          "usuario": "$usuario"&#xd;        }&#xd;      ]&#xd; }&#xd;}</result>
   </query>
   <query id="getLote" useConfig="produccionDS">
      <sql>select RECI.reci_id, reci.nombre, reci.estado from prd.recipientes Reci, alm.alm_depositos Depo&#xd;where reci.depo_id = depo.depo_id AND&#xd;depo.esta_id = CAST(:esta_id as INTEGER)</sql>
      <result outputType="json">{&#xd;"recipientes":&#xd;      {"recipiente":&#xd;        [&#xd;          {&#xd;          "id": "$reci_id",&#xd;          "titulo":"$nombre",&#xd;          "estado":"$estado"&#xd;          }          &#xd;        ]&#xd;      }&#xd; }</result>
      <param name="esta_id" sqlType="STRING"/>
   </query>
   <query id="getEtapa" useConfig="produccionDS">
      <sql>select &#xd;   etap_id, nombre, nom_recipiente, fec_alta, usuario, proc_id , link&#xd;from &#xd;   prd.etapas &#xd;where eliminado = 0 &#xd;and&#xd;etap_id &lt; 1000&#xd;order by orden</sql>
      <result outputType="json">{&#xd;    "etapas":&#xd;      {"etapa":&#xd;        [&#xd;          {&#xd;            "id": "$etap_id",&#xd;            "titulo":"$nombre",&#xd;            "nom_recipiente": "$nom_recipiente",&#xd;            "fec_alta": "$fec_alta",&#xd;            "usuario": "$usuario",&#xd;            "proc_id": "$proc_id",&#xd;            "link": "$link"           &#xd;          }&#xd;        ]&#xd;      }&#xd;  }</result>
   </query>
   <query id="getArticulos" useConfig="produccionDS">
      <sql>SELECT A.*, coalesce(sum(cantidad), 0) as stock&#xd;FROM alm.alm_articulos A&#xd;LEFT JOIN alm.alm_lotes C ON C.arti_id = A.arti_id&#xd;WHERE A.empr_id = 1&#xd;AND A.eliminado = FALSE&#xd;GROUP BY A.arti_id</sql>
      <result outputType="json">{&#xd;    "materias": {&#xd;        "materia": [&#xd;            {&#xd;                "id": "$arti_id",&#xd;                "barcode": "$barcode",&#xd;                "titulo": "$descripcion",&#xd;                "descripcion": "$descripcion",&#xd;                "costo": "$costo",&#xd;                "cantidad_caja": "$cantidad_caja",&#xd;                "punto_pedido": "$punto_pedido",&#xd;                "estado": "$estado",&#xd;                "unidad_medida": "$unidad_medida",&#xd;                "es_loteado": "$es_loteado",&#xd;                "stock": "$stock"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
   </query>
   <query id="getArticulosBusqueda" useConfig="produccionDS">
      <sql>SELECT A.*, coalesce(sum(cantidad), 0) as stock, unidad_medida as um&#xd;FROM alm.alm_articulos A&#xd;LEFT JOIN alm.alm_lotes C ON C.arti_id = A.arti_id&#xd;WHERE A.empr_id = 1&#xd;AND A.eliminado = FALSE&#xd;GROUP BY A.arti_id</sql>
      <result outputType="json">{&#xd;    "materias": {&#xd;        "materia": [&#xd;            {&#xd;                "id": "$arti_id",&#xd;                "barcode": "$barcode",&#xd;                "titulo": "$descripcion",&#xd;                "descripcion": "$descripcion",&#xd;                "stock": "$stock",&#xd;                "um":"$um"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
   </query>
   <query id="getArticulo" useConfig="produccionDS">
      <sql>SELECT A.*, coalesce(sum(cantidad), 0) as stock&#xd;FROM alm.alm_articulos A&#xd;LEFT JOIN alm.alm_lotes C ON C.arti_id = A.arti_id&#xd;WHERE A.empr_id = 1&#xd;AND A.eliminado = FALSE&#xd;AND A.arti_id = CAST(:arti_id as INTEGER)&#xd;GROUP BY A.arti_id</sql>
      <result outputType="json">{&#xd;    "articulos": {&#xd;        "articulo": [&#xd;            {&#xd;                "arti_id": "$arti_id",&#xd;                "barcode": "$barcode",&#xd;                "descripcion": "$descripcion",&#xd;                "costo": "$costo",&#xd;                "cantidad_caja": "$cantidad_caja",&#xd;                "punto_pedido": "$punto_pedido",&#xd;                "estado": "$estado",&#xd;                "unidad_medida": "$unidad_medida",&#xd;                "es_loteado": "$es_loteado",&#xd;                "stock": "$stock"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="arti_id" sqlType="STRING"/>
   </query>
   <query id="setArticulo" useConfig="produccionDS">
      <sql>INSERT INTO alm_articulos&#xd;(barcode, descripcion, es_caja, es_loteado, unidad_medida)&#xd;VALUES &#xd;(:barcode, :descripcion, CAST(:es_caja as INTERGER), CAST(:es_loteado as INTERGER), :unidad_medida)</sql>
      <param name="barcode" sqlType="STRING"/>
      <param name="descripcion" sqlType="STRING"/>
      <param name="es_caja" sqlType="STRING"/>
      <param name="es_loteado" sqlType="STRING"/>
      <param name="unidad_medida" sqlType="STRING"/>
   </query>
   <query id="setParametro" useConfig="produccionDS">
      <sql>INSERT INTO utl_tablas&#xd;(tabla, valor, descripcion)&#xd;VALUES&#xd;(:tabla, :valor, :descripcion)</sql>
      <param name="tabla" sqlType="STRING"/>
      <param name="valor" sqlType="STRING"/>
      <param name="descripcion" sqlType="STRING"/>
   </query>
   <query id="getEtapaPorId" useConfig="produccionDS">
      <sql>select &#xd;   E.etap_id, E.nombre, E.nom_recipiente, 'planificado' as estado, '' as fec_alta, &#xd;   '' as batch_id, '' as establecimiento, '' as num_orden_prod, '' as recipientes, '' as materias, '' as tareas&#xd;from &#xd;   prd.etapas E  &#xd;where &#xd;   E.etap_id = CAST(:etap_id AS INTEGER)&#xd;   and&#xd;   E.eliminado = 0</sql>
      <result outputType="json">{&#xd;  "etapa":&#xd;      {&#xd;        "id": "$etap_id",&#xd;        "lote":"$batch_id",&#xd;        "fecha":"$fec_alta",&#xd;        "titulo":"$nombre",&#xd;        "establecimiento":"$establecimiento",&#xd;        "recipiente":"$recipientes",&#xd;        "titulorecipiente":"$nom_recipiente",&#xd;        "estado":"$estado",&#xd;        "op":"$num_orden_prod",&#xd;        "materias":"$materias",&#xd;        "tareas":"$tareas"&#xd;      }&#xd;}</result>
      <param name="etap_id" sqlType="STRING"/>
   </query>
   <query id="getParametros" useConfig="produccionDS">
      <sql>SELECT * &#xd;FROM alm.utl_tablas&#xd;WHERE tabla = :tabla</sql>
      <result outputType="json">{&#xd; "parametros": {&#xd; "parametro": [&#xd; {&#xd; "valor": "$valor",&#xd; "descripcion": "$descripcion"&#xd; }&#xd; ]&#xd; }&#xd;}</result>
      <param name="tabla" sqlType="STRING"/>
   </query>
   <query id="getProveedores" useConfig="produccionDS">
      <sql>SELECT * &#xd;FROM alm.alm_proveedores&#xd;WHERE&#xd;empr_id = CAST(:empr_id as INTEGER)&#xd;AND eliminado = FALSE</sql>
      <result outputType="json">{&#xd; "proveedores": {&#xd; "proveedor": [&#xd; {&#xd;"id":"$prov_id",&#xd;"titulo":"$nombre",&#xd;"cuit":"$cuit"&#xd; }&#xd; ]&#xd; }&#xd;}</result>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="setEntrada" useConfig="produccionDS">
      <sql>INSERT INTO prd.movimientos_trasportes&#xd;(boleta, fecha_entrada, patente, acoplado, conductor, tipo, bruto, tara, neto, prov_id, esta_id, reci_id)&#xd;VALUES&#xd;(:boleta, TO_DATE(:fecha,'YYYY-MM-DD'), :patente, :acoplado, :conductor, :tipo, CAST(:bruto as float8), CAST(:tara as float8), CAST(:neto as float8), CAST(:proveedor as INTEGER), CAST(:establecimiento as INTEGER), CAST(:reci_id as INTEGER))</sql>
      <param name="boleta" sqlType="STRING"/>
      <param name="patente" sqlType="STRING"/>
      <param name="acoplado" sqlType="STRING"/>
      <param name="conductor" sqlType="STRING"/>
      <param name="tipo" sqlType="STRING"/>
      <param name="bruto" sqlType="STRING"/>
      <param name="tara" sqlType="STRING"/>
      <param name="neto" sqlType="STRING"/>
      <param name="fecha" sqlType="STRING"/>
      <param name="proveedor" sqlType="STRING"/>
      <param name="establecimiento" sqlType="STRING"/>
      <param name="reci_id" sqlType="STRING"/>
   </query>
   <query id="setNotaPedido" keyColumns="pema_id" returnGeneratedKeys="true" useConfig="produccionDS">
      <sql>insert into alm.alm_pedidos_materiales(fecha, empr_id, batch_id) &#xd;values(TO_DATE(:fecha, 'YYYY-MM-DD'), CAST(:empr_id AS INTEGER), CAST(:batch_id AS INTEGER))</sql>
      <result outputType="json">{&#xd; "nota_id": { &#xd;   "pedido_id": "$pema_id" &#xd; }&#xd;}&#xd;&#xd;</result>
      <param name="fecha" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="batch_id" sqlType="STRING"/>
   </query>
   <query id="setDetaNotaPedido" useConfig="produccionDS">
      <sql>insert into alm.alm_deta_pedidos_materiales(pema_id, arti_id, cantidad) &#xd;values(CAST(:pema_id AS INTEGER), CAST(:arti_id AS INTEGER), CAST(:cantidad AS FLOAT8))</sql>
      <param name="pema_id" sqlType="STRING"/>
      <param name="arti_id" sqlType="STRING"/>
      <param name="cantidad" sqlType="STRING"/>
   </query>
   <query id="getLotetodos" useConfig="produccionDS">
      <sql>select reci_id, nombre from prd.recipientes where tipo = 'DEPOSITO' and estado = 'VACIO'</sql>
      <result outputType="json">{&#xd;  "recipientes":&#xd;        {"recipiente":&#xd;          [&#xd;            {&#xd;            "id": "$reci_id",&#xd;            "titulo":"$nombre"&#xd;            }          &#xd;          ]&#xd;        }&#xd;}</result>
   </query>
   <query id="getArtBatchId" useConfig="produccionDS">
      <sql>select alm.alm_articulos.descripcion from alm.alm_articulos &#xd;inner join alm.alm_lotes on alm_lotes.arti_id = alm_articulos.arti_id&#xd;where alm.alm_lotes.batch_id = CAST(:batch_id AS INTEGER)</sql>
      <result outputType="json">{&#xd;  "producto":{&#xd;       "nombre": "$descripcion"&#xd;   }&#xd;}</result>
      <param name="batch_id" sqlType="STRING"/>
   </query>
   <query id="getArticuloPorId" useConfig="produccionDS">
      <sql>select &#xd;   arti_id, barcode, descripcion &#xd;from &#xd;   alm.alm_articulos &#xd;where &#xd;   arti_id = CAST(:arti_id AS INTEGER)</sql>
      <result outputType="json">{&#xd; "articulo":{&#xd;     "arti_id": "$arti_id",&#xd;     "barcode": "$barcode",&#xd;     "descripcion": "$descripcion"&#xd;  }&#xd;} </result>
      <param name="arti_id" sqlType="STRING"/>
   </query>
   <query id="getRecursoPorIdArt" useConfig="produccionDS">
      <sql>select &#xd;   recu_id &#xd;from &#xd;   prd.recursos &#xd;where &#xd;   arti_id = CAST(:arti_id AS INTEGER)</sql>
      <result outputType="json">{&#xd;  "recurso": {&#xd;      "recu_id": "$recu_id"&#xd;  }&#xd;}</result>
      <param name="arti_id" sqlType="STRING"/>
   </query>
   <query id="setRecursoLote" useConfig="produccionDS">
      <sql>insert into prd.recursos_lotes &#xd; (batch_id, recu_id, usuario, empr_id, cantidad, tipo, empa_id, empa_cantidad) &#xd;values&#xd; (CAST(:batch_id AS INTEGER), &#xd;  CAST(:recu_id AS INTEGER), &#xd;  :usuario, &#xd;  CAST(:empr_id AS INTEGER), &#xd;  CAST(:cantidad AS double precision), &#xd;  :tipo,&#xd;  CAST(:empa_id AS INTEGER),&#xd;  CAST(:empa_cantidad AS double precision))</sql>
      <param name="batch_id" sqlType="STRING"/>
      <param name="recu_id" sqlType="STRING"/>
      <param name="usuario" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="cantidad" sqlType="STRING"/>
      <param name="tipo" sqlType="STRING"/>
      <param name="empa_id" sqlType="STRING"/>
      <param name="empa_cantidad" sqlType="STRING"/>
   </query>
   <query id="getRecursoLoteBatchTipo" useConfig="produccionDS">
      <sql>select &#xd;     Art.arti_id, Art.barcode, Art.descripcion, RL.cantidad, RL.empa_cantidad as cant_emp, ALLO.cantidad as stock, Art.unidad_medida, EM.nombre, EM.unidad_medida as uni_med_emp&#xd;from &#xd;     prd.recursos_lotes RL&#xd;join &#xd;     prd.recursos Rec on Rec.recu_id = RL.recu_id &#xd;join &#xd;     alm.alm_articulos Art on Art.arti_id = Rec.arti_id&#xd;left join &#xd;	 alm.alm_lotes ALLO on  ALLO.batch_id = RL.batch_id&#xd;left join &#xd;	 prd.empaque EM  on EM.empa_id = RL.empa_id&#xd;		&#xd;where &#xd;     RL.batch_id = CAST(:batch_id AS INTEGER) &#xd;and &#xd;     RL.tipo = :tipo</sql>
      <result outputType="json">{&#xd;   "recursos":{&#xd;      "recurso":[&#xd;         {&#xd;            "arti_id": "$arti_id",&#xd;            "barcode": "$barcode",&#xd;            "descripcion":"$descripcion",&#xd;            "uni_med":"$unidad_medida",&#xd;            "cantidad":"$cantidad",&#xd;            "stock":"$stock",&#xd;            "nombre": "$nombre",&#xd;            "uni_med_emp": "$uni_med_emp",&#xd;            "cant_emp": "$cant_emp"&#xd;         }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="batch_id" sqlType="STRING"/>
      <param name="tipo" sqlType="STRING"/>
   </query>
   <query id="getEmpaques" useConfig="produccionDS">
      <sql>select &#xd;   empa_id as id, nombre as titulo, unidad_medida as unidad, capacidad as volumen &#xd;from &#xd;   prd.empaque</sql>
      <result outputType="json">{&#xd; "empaques": {&#xd;    "empaque": [&#xd;           {&#xd;            "id": "$id",&#xd;            "titulo": "$titulo",&#xd;            "unidad": "$unidad",&#xd;            "volumen": "$volumen"&#xd;           }&#xd;      ]&#xd;    }&#xd;}</result>
   </query>
   <query id="setFraccionamiento" useConfig="produccionDS">
      <sql>insert into &#xd;    prd.fraccionamientos(recu_id, empa_id, cantidad, empr_id) &#xd;values&#xd;   (CAST(:recu_id AS INTEGER), CAST(:empa_id AS INTEGER), CAST(:cantidad AS FLOAT8 ), CAST(:empr_id AS INTEGER))</sql>
      <param name="recu_id" sqlType="STRING"/>
      <param name="empa_id" sqlType="STRING"/>
      <param name="cantidad" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="getLoteAFraccionar" useConfig="produccionDS">
      <sql>select ART.descripcion, ART.arti_id, DEM.lote_id, DEM.cantidad as cant_entreg, AL.codigo&#xd;from &#xd;	alm.alm_pedidos_materiales PM,&#xd;	alm.alm_entrega_materiales EM,&#xd;	alm.alm_deta_entrega_materiales DEM,&#xd;	alm.alm_articulos ART,&#xd;	alm.alm_lotes al&#xd;where	&#xd;	EM.pema_id = PM.pema_id and&#xd;	DEM.enma_id = EM.enma_id and&#xd;	DEM.arti_id = ART.arti_id and&#xd;	PM.batch_id = CAST(:batch_id AS INTEGER) and&#xd;	AL.lote_id = dem.lote_id</sql>
      <result outputType="json">{&#xd;   "lotes":{&#xd;      "lote":[&#xd;         {&#xd;            "art_nombre":"$descripcion",&#xd;            "arti_id":"$arti_id",&#xd;            "lote_id":"$lote_id",&#xd;            "codigo":"$codigo",&#xd;            "cant_entreg":"$cant_entreg"&#xd;         }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="batch_id" sqlType="STRING"/>
   </query>
   <query id="getMateriaFraccionar" useConfig="produccionDS">
      <sql>select &#xd;     Art.descripcion, RL.cantidad, ALLO.cantidad as stock, Art.unidad_medida as uni_med, &#xd;     EMP.nombre as empa_nombre, EMP.capacidad, EMP.unidad_medida&#xd;from &#xd;     prd.recursos_lotes RL&#xd;join &#xd;     prd.recursos Rec on Rec.recu_id = RL.recu_id &#xd;join &#xd;     alm.alm_articulos Art on Art.arti_id = Rec.arti_id&#xd;left join&#xd;	alm.alm_lotes ALLO on  ALLO.batch_id = RL.batch_id&#xd; join 	&#xd;    prd.empaque EMP on EMP.empa_id = RL.empa_id&#xd;where &#xd;     RL.batch_id = CAST(:batch_id AS INTEGER) &#xd;and &#xd;     RL.tipo = :tipo</sql>
      <result outputType="json">{  &#xd;      "materia":{&#xd;         "descripcion":"$descripcion",&#xd;         "cantidad":"$cantidad",&#xd;         "stock":"$stock",&#xd;         "uni_med":"$uni_med",&#xd;         "empa_nombre":"$empa_nombre",&#xd;         "empa_cantidad":"$empa_cantidad",&#xd;         "capacidad": "$capacidad",&#xd;         "unidad_medida": "$unidad_medida"&#xd;      } &#xd;}</result>
      <param name="batch_id" sqlType="STRING"/>
      <param name="tipo" sqlType="STRING"/>
   </query>
   <query id="setEtapaProducto" useConfig="produccionDS">
      <sql>insert into prd.etapas_productos(etap_id, arti_id) values(CAST(:etap_id AS INTEGER), CAST(:arti_id AS INTEGER))</sql>
      <param name="etap_id" sqlType="STRING"/>
      <param name="arti_id" sqlType="STRING"/>
   </query>
   <query id="setEtapaMateriales" useConfig="produccionDS">
      <sql>insert into prd.etapas_materiales(etap_id, arti_id) values(CAST(:etap_id AS INTEGER), CAST(:arti_id AS INTEGER))</sql>
      <param name="etap_id" sqlType="STRING"/>
      <param name="arti_id" sqlType="STRING"/>
   </query>
   <query id="getEtapaProducto" useConfig="produccionDS">
      <sql>select &#xd;  ar.arti_id&#xd;  , AR.descripcion&#xd;  , AR.barcode&#xd;  , ar.unidad_medida um&#xd;  , sum(lo.cantidad) stock&#xd;from &#xd;  prd.etapas_productos EP&#xd;,alm.alm_articulos AR&#xd;left join alm.alm_lotes lo on lo.arti_id  = ar.arti_id &#xd;  and lo.eliminado = false &#xd;  and lo.estado = 'AC'&#xd;  and lo.fec_vencimiento &gt;=  date_trunc('day',now())&#xd;where EP.arti_id = AR.arti_id  &#xd;  and etap_id = CAST(:etap_id as INTEGER)&#xd;  group by ar.arti_id</sql>
      <result outputType="json">{&#xd;  "productos":{&#xd;     "producto":[&#xd;        {&#xd;          "arti_id": "$arti_id",&#xd;          "descripcion": "$descripcion",&#xd;          "barcode":"$barcode",&#xd;          "um":"$um",&#xd;          "stock":"$stock"&#xd;                }&#xd;      ]&#xd;    }&#xd;}</result>
      <param name="etap_id" sqlType="STRING"/>
   </query>
   <query id="getEtapasMateriales" useConfig="produccionDS">
      <sql>select &#xd;  ar.arti_id&#xd;  , AR.descripcion&#xd;  , AR.barcode&#xd;  , ar.unidad_medida um&#xd;  , sum(COALESCE(lo.cantidad,0)) stock&#xd;from &#xd;  prd.etapas_materiales EM&#xd;,alm.alm_articulos AR&#xd;left join alm.alm_lotes lo on lo.arti_id  = ar.arti_id &#xd;  and lo.eliminado = false &#xd;  and lo.estado = 'AC'&#xd;  and lo.fec_vencimiento &gt;=  date_trunc('day',now())&#xd;where EM.arti_id = AR.arti_id  &#xd;  and EM.etap_id = CAST(:etap_id as INTEGER)&#xd;  group by ar.arti_id</sql>
      <result outputType="json">{&#xd;  "productos":{&#xd;     "producto":[&#xd;        {&#xd;          "arti_id": "$arti_id",&#xd;          "descripcion": "$descripcion",&#xd;          "barcode":"$barcode",&#xd;          "um":"$um",&#xd;          "stock":"$stock"&#xd;                }&#xd;      ]&#xd;    }&#xd;}</result>
      <param name="etap_id" sqlType="STRING"/>
   </query>
   <query id="getinfoPedMatPorCaseId" useConfig="produccionDS">
      <sql>select &#xd; PM.pema_id, PM.fecha, PM.justificacion, PM.estado, LO.lote_id &#xd;from &#xd; alm.alm_pedidos_materiales PM&#xd;join prd.lotes LO on LO.batch_id = PM.batch_id &#xd;where &#xd; case_id = CAST(:case_id as INTEGER)</sql>
      <result outputType="json">{&#xd;    "info":{&#xd;      "pema_id": "$pema_id",&#xd;      "lote_id": "$lote_id",&#xd;      "fecha": "$fecha",&#xd;      "justificacion": "$justificacion",&#xd;      "estado": "$estado"&#xd;    }&#xd;}</result>
      <param name="case_id" sqlType="STRING"/>
   </query>
   <query id="deleteRecursosLote" useConfig="produccionDS">
      <sql>delete &#xd;from &#xd;   prd.recursos_lotes &#xd;where &#xd;   batch_id = cast(:batch_id as INTEGER)&#xd;and tipo = 'MATERIA_PRIMA'</sql>
      <param name="batch_id" sqlType="STRING"/>
   </query>
   <query id="getArticulosXTipo" useConfig="produccionDS">
      <sql>select &#xd;  ar.arti_id&#xd;  , AR.descripcion&#xd;  , AR.barcode&#xd;  , ar.unidad_medida um&#xd;  , sum(lo.cantidad) stock&#xd;from &#xd;  core.tablas t&#xd;,alm.alm_articulos AR&#xd;left join alm.alm_lotes lo on lo.arti_id  = ar.arti_id &#xd;  and lo.eliminado = false &#xd;  and lo.estado = 'AC'&#xd;  and lo.fec_vencimiento &gt;=  date_trunc('day',now())&#xd;where t.valor = :tipo and t.tabl_id = AR.tipo&#xd;  group by ar.arti_id</sql>
      <result outputType="json">{&#xd;  "articulos":{&#xd;     "articulo":[&#xd;        {&#xd;          "arti_id": "$arti_id",&#xd;          "descripcion": "$descripcion",&#xd;          "barcode":"$barcode",&#xd;          "um":"$um",&#xd;          "stock":"$stock"&#xd;                }&#xd;      ]&#xd;    }&#xd;}</result>
      <param name="tipo" sqlType="STRING"/>
   </query>
   <query id="getEtapasSalida" useConfig="produccionDS">
      <sql>select &#xd;  ar.arti_id&#xd;  , AR.descripcion&#xd;  , AR.barcode&#xd;  , ar.unidad_medida um&#xd;  , sum(lo.cantidad) stock&#xd;from &#xd;  prd.etapas_salidas EP&#xd;,alm.alm_articulos AR&#xd;left join alm.alm_lotes lo on lo.arti_id  = ar.arti_id &#xd;  and lo.eliminado = false &#xd;  and lo.estado = 'AC'&#xd;  and lo.fec_vencimiento &gt;=  date_trunc('day',now())&#xd;where EP.arti_id = AR.arti_id  &#xd;  and etap_id = CAST(:etap_id as INTEGER)&#xd;  group by ar.arti_id</sql>
      <result outputType="json">&#xd;{&#xd;  "salidas":{&#xd;     "salida":[&#xd;        {&#xd;          "arti_id": "$arti_id",&#xd;          "descripcion": "$descripcion",&#xd;          "barcode":"$barcode",&#xd;          "um":"$um",&#xd;          "stock":"$stock"&#xd;                }&#xd;      ]&#xd;    }&#xd;}</result>
      <param name="etap_id" sqlType="STRING"/>
   </query>
   <operation name="etapaxId">
      <call-query href="getEtapaPorId">
         <with-param name="etap_id" query-param="etap_id"/>
      </call-query>
   </operation>
   <resource method="GET" path="/establecimiento">
      <call-query href="getEstablecimiento"/>
   </resource>
   <resource method="GET" path="/lote/{esta_id}">
      <call-query href="getLote">
         <with-param name="esta_id" query-param="esta_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/etapas">
      <call-query href="getEtapa"/>
   </resource>
   <resource method="GET" path="/articulos">
      <call-query href="getArticulos"/>
   </resource>
   <resource method="GET" path="/articulos/{arti_id}">
      <call-query href="getArticulo">
         <with-param name="arti_id" query-param="arti_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/articulos">
      <call-query href="setArticulo">
         <with-param name="barcode" query-param="barcode"/>
         <with-param name="descripcion" query-param="descripcion"/>
         <with-param name="es_caja" query-param="es_caja"/>
         <with-param name="es_loteado" query-param="es_loteado"/>
         <with-param name="unidad_medida" query-param="unidad_medida"/>
      </call-query>
   </resource>
   <resource method="GET" path="/etapas/{etap_id}">
      <call-query href="getEtapaPorId">
         <with-param name="etap_id" query-param="etap_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/parametros/{tabla}">
      <call-query href="getParametros">
         <with-param name="tabla" query-param="tabla"/>
      </call-query>
   </resource>
   <resource method="POST" path="/parametros">
      <call-query href="setParametro">
         <with-param name="tabla" query-param="tabla"/>
         <with-param name="valor" query-param="valor"/>
         <with-param name="descripcion" query-param="descripcion"/>
      </call-query>
   </resource>
   <resource method="GET" path="/proveedores/{empr_id}">
      <call-query href="getProveedores">
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/entradas">
      <call-query href="setEntrada">
         <with-param name="boleta" query-param="boleta"/>
         <with-param name="patente" query-param="patente"/>
         <with-param name="acoplado" query-param="acoplado"/>
         <with-param name="conductor" query-param="conductor"/>
         <with-param name="tipo" query-param="tipo"/>
         <with-param name="bruto" query-param="bruto"/>
         <with-param name="tara" query-param="tara"/>
         <with-param name="neto" query-param="neto"/>
         <with-param name="fecha" query-param="fecha"/>
         <with-param name="proveedor" query-param="proveedor"/>
         <with-param name="establecimiento" query-param="establecimiento"/>
         <with-param name="reci_id" query-param="reci_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/notapedido">
      <call-query href="setNotaPedido">
         <with-param name="fecha" query-param="fecha"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="batch_id" query-param="batch_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/notapedido/detalle">
      <call-query href="setDetaNotaPedido">
         <with-param name="pema_id" query-param="pema_id"/>
         <with-param name="arti_id" query-param="arti_id"/>
         <with-param name="cantidad" query-param="cantidad"/>
      </call-query>
   </resource>
   <resource method="GET" path="/lote/todos/deposito">
      <call-query href="getLotetodos"/>
   </resource>
   <resource method="GET" path="/articulo/nombre/{batch_id}">
      <call-query href="getArticuloPorId">
         <with-param name="arti_id" query-param="arti_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/articulo/info/{arti_id}">
      <call-query href="getArticuloPorId">
         <with-param name="arti_id" query-param="arti_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/recurso/{arti_id}">
      <call-query href="getRecursoPorIdArt">
         <with-param name="arti_id" query-param="arti_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/recurso/lote">
      <call-query href="setRecursoLote">
         <with-param name="batch_id" query-param="batch_id"/>
         <with-param name="recu_id" query-param="recu_id"/>
         <with-param name="usuario" query-param="usuario"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="cantidad" query-param="cantidad"/>
         <with-param name="tipo" query-param="tipo"/>
         <with-param name="empa_id" query-param="empa_id"/>
         <with-param name="empa_cantidad" query-param="empa_cantidad"/>
      </call-query>
   </resource>
   <resource method="GET" path="/recurso/lote/{batch_id}/tiporec/{tipo}">
      <call-query href="getRecursoLoteBatchTipo">
         <with-param name="batch_id" query-param="batch_id"/>
         <with-param name="tipo" query-param="tipo"/>
      </call-query>
   </resource>
   <resource method="GET" path="/articulos/busquedaavanzada">
      <call-query href="getArticulosBusqueda"/>
   </resource>
   <resource method="GET" path="/empaques">
      <call-query href="getEmpaques"/>
   </resource>
   <resource method="POST" path="/fraccionamiento">
      <call-query href="setFraccionamiento">
         <with-param name="recu_id" query-param="recu_id"/>
         <with-param name="empa_id" query-param="empa_id"/>
         <with-param name="cantidad" query-param="cantidad"/>
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/materia/{tipo}/batch/{batch_id}">
      <call-query href="getMateriaFraccionar">
         <with-param name="batch_id" query-param="batch_id"/>
         <with-param name="tipo" query-param="tipo"/>
      </call-query>
   </resource>
   <resource method="POST" path="/etapas/productos">
      <call-query href="setEtapaProducto">
         <with-param name="etap_id" query-param="etap_id"/>
         <with-param name="arti_id" query-param="arti_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/etapas/materiales">
      <call-query href="setEtapaMateriales">
         <with-param name="etap_id" query-param="etap_id"/>
         <with-param name="arti_id" query-param="arti_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/etapas/productos/{etap_id}">
      <call-query href="getEtapaProducto">
         <with-param name="etap_id" query-param="etap_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/etapas/materiales/{etap_id}">
      <call-query href="getEtapasMateriales">
         <with-param name="etap_id" query-param="etap_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/pedidoMateriales/{case_id}">
      <call-query href="getinfoPedMatPorCaseId">
         <with-param name="case_id" query-param="case_id"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/recurso/lote">
      <call-query href="deleteRecursosLote">
         <with-param name="batch_id" query-param="batch_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/articulos/tipo/{tipo}">
      <call-query href="getArticulosXTipo">
         <with-param name="tipo" query-param="tipo"/>
      </call-query>
   </resource>
   <resource method="GET" path="/etapas/salidas/{etap_id}">
      <call-query href="getEtapasSalida">
         <with-param name="etap_id" query-param="etap_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/lote/fraccionar/batch/{batch_id}">
      <call-query href="getLoteAFraccionar">
         <with-param name="batch_id" query-param="batch_id"/>
      </call-query>
   </resource>
</data>
