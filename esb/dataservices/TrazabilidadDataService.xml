<data enableBatchRequests="true" enableBoxcarring="true" name="TrazabilidadDataService" transports="http https local">
   <config enableOData="false" id="ToolsDataSource">
      <property name="carbon_datasource_name">ToolsDataSource</property>
   </config>
   <query id="loteSet" useConfig="ToolsDataSource">
      <sql>select prd.crear_lote(&#xd; :p_lote_id &#xd;,cast(:p_batch_id_padre as bigint)&#xd;,:p_num_orden_prod&#xd;,cast(:p_etap_id as integer)&#xd;,:p_usuario_app&#xd;,cast(:p_reci_id as integer)&#xd;,cast(:p_empr_id as integer)&#xd;,:p_forzar_agregar)&#xd;resultado;</sql>
      <result outputType="json">{&#xd;   "respuesta":{&#xd;           "resultado": "$resultado"&#xd;             }&#xd;}</result>
      <param name="p_lote_id" sqlType="STRING"/>
      <param name="p_batch_id_padre" sqlType="STRING"/>
      <param name="p_num_orden_prod" sqlType="STRING"/>
      <param name="p_etap_id" sqlType="STRING"/>
      <param name="p_usuario_app" sqlType="STRING"/>
      <param name="p_reci_id" sqlType="STRING"/>
      <param name="p_empr_id" sqlType="STRING"/>
      <param name="p_forzar_agregar" sqlType="STRING"/>
   </query>
   <query id="getBatchidPorRecipiente" useConfig="ToolsDataSource">
      <sql>SELECT lotes.batch_id&#xd;from prd.lotes lotes&#xd;where lotes.reci_id = cast(:reci_id as integer)</sql>
      <result outputType="json">{&#xd;  "lote": {&#xd;      "batch_id" : "$batch_id"&#xd;         }&#xd;}{</result>
      <param name="reci_id" sqlType="STRING"/>
   </query>
   <query id="cambiarLote" useConfig="ToolsDataSource">
      <sql>select prd.cambiar_recipiente(&#xd;cast(:batch_id_origen as int8)&#xd;,cast(:reci_id as int4)&#xd;,cast(:etap_id_deposito as int4)&#xd;,cast(:empre_id as int4)&#xd;,cast(:usuario_app as varchar)&#xd;,cast(:forzar_agregar as varchar)) resultado;</sql>
      <result outputType="json">{&#xd;   "respuesta":{&#xd;           "resultado": "$resultado"&#xd;             }&#xd;}</result>
      <param name="batch_id_origen" sqlType="STRING"/>
      <param name="reci_id" sqlType="STRING"/>
      <param name="empre_id" sqlType="STRING"/>
      <param name="etap_id_deposito" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="forzar_agregar" sqlType="STRING"/>
   </query>
   <query id="cambiarLote2" useConfig="ToolsDataSource">
      <sql>select prd.cambiar_recipiente(&#xd;cast(:batch_id_origen as int8)&#xd;,cast(:reci_id as int4)&#xd;,cast(:etap_id_deposito as int4)&#xd;,cast(:empre_id as int4)&#xd;,cast(:usuario_app as varchar)&#xd;,cast(:forzar_agregar as varchar)&#xd;,cast(:cantidad as float8)) resultado;</sql>
      <param name="batch_id_origen" sqlType="STRING"/>
      <param name="reci_id" sqlType="STRING"/>
      <param name="empre_id" sqlType="STRING"/>
      <param name="etap_id_deposito" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="forzar_agregar" sqlType="STRING"/>
      <param name="cantidad" sqlType="STRING"/>
   </query>
   <query id="ingresarLote" useConfig="ToolsDataSource">
      <sql>select prd.ingresar_deposito(&#xd;cast (:arti_id as int4)&#xd;,cast (:cantidad as float8)&#xd;,cast ( :batch_id_origen as int8)&#xd;,:lote&#xd;,cast (:reci_id as int4)&#xd;,cast (:empre_id as int4)&#xd;,cast (:etap_id_deposito as int4)&#xd;,cast (:usuario_app as varchar)&#xd;,cast(:forzar_agregar as varchar)) resultado;</sql>
      <result outputType="json">{&#xd;   "respuesta":{&#xd;           "resultado": "$resultado"&#xd;             }&#xd;}</result>
      <param name="cantidad" sqlType="STRING"/>
      <param name="batch_id_origen" sqlType="STRING"/>
      <param name="reci_id" sqlType="STRING"/>
      <param name="empre_id" sqlType="STRING"/>
      <param name="etap_id_deposito" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="forzar_agregar" sqlType="STRING"/>
      <param name="arti_id" sqlType="STRING"/>
      <param name="lote" sqlType="STRING"/>
   </query>
   <query id="loteSetV2" useConfig="ToolsDataSource">
      <sql>select prd.crear_lote_v2(&#xd; :lote_id &#xd;,cast(:arti_id as integer)&#xd;,cast(:prov_id as integer)&#xd;,cast(:batch_id_padre as bigint)&#xd;,cast(:cantidad as float8)&#xd;,cast(:cantidad_padre as float8)&#xd;,:num_orden_prod&#xd;,cast(:reci_id as integer)&#xd;,cast(:etap_id as integer)&#xd;,:usuario_app&#xd;,cast(:empr_id as integer)&#xd;,:forzar_agregar&#xd;,to_date(:fec_vencimiento,'DD-MM-YYYY')&#xd;,cast (:recu_id as integer)&#xd;,:tipo_recurso&#xd;,:planificado&#xd;,cast(:batch_id as bigint))&#xd;resultado;</sql>
      <result outputType="json">{"respuesta":{"resultado":"$resultado"}}</result>
      <param name="lote_id" sqlType="STRING"/>
      <param name="batch_id_padre" sqlType="STRING"/>
      <param name="cantidad" sqlType="STRING"/>
      <param name="cantidad_padre" sqlType="STRING"/>
      <param name="num_orden_prod" sqlType="STRING"/>
      <param name="reci_id" sqlType="STRING"/>
      <param name="etap_id" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="forzar_agregar" optional="true" sqlType="STRING"/>
      <param name="arti_id" sqlType="STRING"/>
      <param name="prov_id" sqlType="STRING"/>
      <param name="fec_vencimiento" optional="true" sqlType="STRING"/>
      <param name="recu_id" sqlType="STRING"/>
      <param name="tipo_recurso" sqlType="STRING"/>
      <param name="planificado" sqlType="STRING"/>
      <param name="batch_id" optional="true" sqlType="STRING"/>
   </query>
   <query id="getExistencia" useConfig="ToolsDataSource">
      <sql>select alm.obtener_existencia_batch(&#xd;cast(:batch_id_origen as int8)&#xd;) existencia;</sql>
      <result outputType="json">{&#xd; "existencia": {&#xd; "cantidad": "$existencia";&#xd; }&#xd;}</result>
      <param name="batch_id_origen" sqlType="STRING"/>
   </query>
   <query id="loteSetV2_batch_req" useConfig="ToolsDataSource">
      <sql>select prd.crear_lote_v2(&#xd; :lote_id &#xd;,cast(:arti_id as integer)&#xd;,cast(:prov_id as integer)&#xd;,cast(:batch_id_padre as bigint)&#xd;,cast(:cantidad as float8)&#xd;,cast(:cantidad_padre as float8)&#xd;,:num_orden_prod&#xd;,cast(:reci_id as integer)&#xd;,cast(:etap_id as integer)&#xd;,:usuario_app&#xd;,cast(:empr_id as integer)&#xd;,:forzar_agregar&#xd;,to_date(:fec_vencimiento,'DD-MM-YYYY')&#xd;,cast (:recu_id as int4)&#xd;,:tipo_recurso&#xd;,:planificado&#xd;,cast(:batch_id as bigint))&#xd;resultado;</sql>
      <param name="lote_id" sqlType="STRING"/>
      <param name="arti_id" sqlType="STRING"/>
      <param name="prov_id" sqlType="STRING"/>
      <param name="batch_id_padre" sqlType="STRING"/>
      <param name="cantidad" sqlType="STRING"/>
      <param name="cantidad_padre" sqlType="STRING"/>
      <param name="num_orden_prod" sqlType="STRING"/>
      <param name="reci_id" sqlType="STRING"/>
      <param name="etap_id" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="forzar_agregar" sqlType="STRING"/>
      <param name="fec_vencimiento" sqlType="STRING"/>
      <param name="recu_id" sqlType="STRING"/>
      <param name="tipo_recurso" sqlType="STRING"/>
      <param name="planificado" sqlType="STRING"/>
      <param name="batch_id" optional="true" sqlType="STRING"/>
   </query>
   <query id="getMovimientosTransporte" useConfig="ToolsDataSource">
      <sql>select mt.motr_id, mv.tipo, es.nombre establecimiento ,mv.tipo tipo_movimiento,mt.cuit,mt.boleta,mt.acoplado, pr.nombre proveedor, tr.razon_social transportista ,to_char(mt.fecha_entrada,'dd-mm-yyyy') fecha_entrada, mt.patente, mt.neto, mt.estado&#xd;from prd.movimientos_trasportes mt&#xd;, prd.establecimientos es&#xd;, alm.alm_proveedores pr&#xd;, core.transportistas tr&#xd;,(select :tipo_movimiento tipo) mv&#xd;where mt.prov_id = pr.prov_id&#xd;and mt.cuit = tr.cuit&#xd;and es.esta_id = mt.esta_id&#xd;and mt.estado= case	&#xd;	when mv.tipo='RECEPCION' then 'FINALIZADO'&#xd;	else 'ASIGNADO'&#xd;	end;</sql>
      <result outputType="json">{"movimientosTransporte":{&#xd;   "movimientoTransporte":[&#xd;     {&#xd;      "boleta":"$boleta"&#xd;      ,"establecimiento":"$establecimiento"&#xd;      ,"proveedor":"$proveedor"  &#xd;      ,"transportista":"$transportista"&#xd;      ,"fecha_entrada":"$fecha_entrada"&#xd;      ,"patente":"$patente"&#xd;   ,"acoplado":"$acoplado"&#xd;      ,"neto":"$neto"&#xd;      ,"estado":"$estado",&#xd;"cuit":"$cuit"&#xd;      ,"@getArticulosMovimientoTransporte":"$tipo_movimiento-&gt;tipo_movimiento,$motr_id-&gt;motr_id"&#xd;     }&#xd;   ]&#xd;}&#xd;}&#xd;</result>
      <param name="tipo_movimiento" sqlType="STRING"/>
   </query>
   <query id="getArticulosMovimientoTransporte" useConfig="ToolsDataSource">
      <sql>select al.codigo codigo_lote, ar.descripcion articulo, ar.unidad_medida um,&#xd;case when tm.tipo='RECEPCION'&#xd;then lh.cantidad_padre &#xd;else lh.cantidad &#xd;end cantidad&#xd;from alm.alm_articulos ar&#xd;,alm.alm_lotes al&#xd;,prd.lotes lo&#xd;,prd.lotes_hijos lh&#xd;,prd.recipientes re &#xd;,prd.movimientos_trasportes tr &#xd;,(select :tipo_movimiento tipo) tm&#xd;where tr.motr_id = re.motr_id&#xd;and lo.reci_id = re.reci_id&#xd;and al.batch_id = lo.batch_id&#xd;and ar.arti_id = al.arti_id&#xd;and case &#xd;	when tm.tipo = 'RECEPCION' &#xd;	then lh.batch_id_padre = lo.batch_id &#xd;	else lh.batch_id=lo.batch_id &#xd;	end&#xd;and tr.motr_id = cast(:motr_id as integer)</sql>
      <result outputType="json">{"articulos":{&#xd;"articulo":[&#xd;{&#xd;"codigo_lote":"$codigo_lote",&#xd;"articulo":"$articulo",&#xd;"cantidad":"$cantidad",&#xd;"um":"$um"&#xd;}&#xd;]&#xd;}&#xd;}</result>
      <param name="tipo_movimiento" sqlType="STRING"/>
      <param name="motr_id" sqlType="STRING"/>
   </query>
   <query id="getProduccion" useConfig="ToolsDataSource">
      <sql>select lo.fec_alta fecha&#xd;, ar.descripcion producto&#xd;, lh.cantidad&#xd;, ar.unidad_medida&#xd;, et.nombre etapa&#xd;, rle.descripcion recurso&#xd;from &#xd;alm.alm_lotes al&#xd;,prd.lotes_hijos lh&#xd;,alm.alm_articulos ar&#xd;,prd.etapas et &#xd;,(select :fechasta fec ) hasta&#xd;,(select :fecdesde fec ) desde&#xd;,(select :etapa filtro ) etapa&#xd;,(select :producto filtro ) producto&#xd;,prd.lotes lo&#xd;full outer join ( select rl.batch_id batch_id,eq.descripcion descripcion&#xd;                  from prd.recursos_lotes rl &#xd;                	,prd.recursos re&#xd;                	,core.equipos eq&#xd;                  where rl.recu_id =re.recu_id &#xd;				  and eq.equi_id = re.equi_id) rle&#xd;on rle.batch_id = lo.batch_id		&#xd;where lo.batch_id = al.batch_id&#xd;and ar.arti_id = al.arti_id&#xd;and et.etap_id = lo.etap_id&#xd;and lh.batch_id = lo.batch_id&#xd;and et.nombre = case when etapa.filtro is null or etapa.filtro = '' then et.nombre else etapa.filtro end &#xd;and ar.arti_id = case when producto.filtro is null or producto.filtro = '' then ar.arti_id else cast(producto.filtro as integer) end &#xd;and lo.fec_alta &lt;= to_date(case when hasta.fec is null or hasta.fec = '' then '01-01-2100' else hasta.fec end ,'dd-mm-yyyy') &#xd;and lo.fec_alta &gt;= to_date(case when desde.fec is null or desde.fec = '' then '01-01-1899' else desde.fec end,'dd-mm-yyyy')&#xd;and et.etap_id &lt; 1000</sql>
      <result outputType="json">{"productos":{&#xd;"producto": [&#xd;{&#xd;"fecha":"$fecha",&#xd;"producto":"$producto",&#xd;"cantidad":"$cantidad",&#xd;"unidad_medida":"$unidad_medida",&#xd;"etapa":"$etapa",&#xd;"recurso":"$recurso"&#xd;}&#xd;]&#xd;}&#xd;}&#xd;</result>
      <param name="etapa" sqlType="STRING"/>
      <param name="fechasta" sqlType="STRING"/>
      <param name="fecdesde" sqlType="STRING"/>
      <param name="producto" sqlType="STRING"/>
   </query>
   <query id="getProduccionPorRecurso" useConfig="ToolsDataSource">
      <sql>select lo.fec_alta fecha&#xd;, ar.descripcion producto&#xd;, lh.cantidad&#xd;, ar.unidad_medida&#xd;, et.nombre etapa&#xd;, eq.descripcion recurso&#xd;from &#xd;alm.alm_lotes al&#xd;,prd.lotes_hijos lh&#xd;,alm.alm_articulos ar&#xd;,prd.etapas et &#xd;,(select :fechasta fec ) hasta&#xd;,(select :fecdesde fec ) desde&#xd;,(select :producto filtro) producto&#xd;,(select :etapa filtro ) etapa&#xd;,(select :recurso filtro ) recurso&#xd;,prd.lotes lo&#xd;,prd.recursos_lotes rl &#xd;,prd.recursos re&#xd;,core.equipos eq&#xd;where lo.batch_id = al.batch_id&#xd;and rl.recu_id =re.recu_id &#xd;and eq.equi_id = re.equi_id&#xd;AND rl.batch_id = lo.batch_id		&#xd;and ar.arti_id = al.arti_id&#xd;and et.etap_id = lo.etap_id&#xd;and lh.batch_id = lo.batch_id&#xd;and eq.descripcion =  case when recurso.filtro is null or recurso.filtro = '' then eq.descripcion else recurso.filtro end&#xd;and et.nombre = case when etapa.filtro is null or etapa.filtro = '' then et.nombre else etapa.filtro end &#xd;and ar.arti_id = case when producto.filtro is null or producto.filtro = '' then ar.arti_id else cast(producto.filtro  as integer) end &#xd;and lo.fec_alta &lt;= to_date(case when hasta.fec is null or hasta.fec = '' then '01-01-2100' else hasta.fec end ,'dd-mm-yyyy') &#xd;and lo.fec_alta &gt;= to_date(case when desde.fec is null or desde.fec = '' then '01-01-1899' else desde.fec end,'dd-mm-yyyy')&#xd;and et.etap_id &lt; 1000</sql>
      <result outputType="json">{"productos":{&#xd;"producto": [&#xd;{&#xd;"fecha":"$fecha",&#xd;"producto":"$producto",&#xd;"cantidad":"$cantidad",&#xd;"unidad_medida":"$unidad_medida",&#xd;"etapa":"$etapa",&#xd;"recurso":"$recurso"&#xd;}&#xd;]&#xd;}&#xd;}</result>
      <param name="recurso" sqlType="STRING"/>
      <param name="fechasta" sqlType="STRING"/>
      <param name="fecdesde" sqlType="STRING"/>
      <param name="etapa" sqlType="STRING"/>
      <param name="producto" sqlType="STRING"/>
   </query>
   <query id="getProductos" useConfig="ToolsDataSource">
      <sql>select art.descripcion  nombre&#xd;,art.arti_id id&#xd;from alm.alm_articulos art</sql>
      <result outputType="json">{&#xd; "productos": {&#xd; "producto": [&#xd; {&#xd; "nombre": "$nombre",&#xd; "id":"$id"&#xd; }&#xd; ]&#xd; }&#xd;}</result>
   </query>
   <query id="getAllEtapas" useConfig="ToolsDataSource">
      <sql>select nombre&#xd;from prd.etapas&#xd;where etap_id &lt;1000&#xd;order by 1;</sql>
      <result outputType="json">{&#xd; "etapas": {&#xd; "etapa": [&#xd; {&#xd; "nombre": "$nombre"&#xd; }&#xd; ]&#xd; }&#xd;}</result>
   </query>
   <query id="getRecursos" useConfig="ToolsDataSource">
      <sql>select descripcion nombre&#xd;from prd.recursos re&#xd;,core.equipos eq&#xd;where re.equi_id=eq.equi_id &#xd;order by 1</sql>
      <result outputType="json">{&#xd; "recursos": {&#xd; "recurso": [&#xd; {&#xd; "nombre": "$nombre"&#xd; }&#xd; ]&#xd; }&#xd;}</result>
   </query>
   <operation name="getprod">
      <call-query href="getProduccion">
         <with-param name="etapa" query-param="etapa"/>
         <with-param name="fechasta" query-param="fechasta"/>
         <with-param name="fecdesde" query-param="fecdesde"/>
      </call-query>
   </operation>
   <resource method="POST" path="/lote">
      <call-query href="loteSetV2">
         <with-param name="lote_id" query-param="lote_id"/>
         <with-param name="batch_id_padre" query-param="batch_id_padre"/>
         <with-param name="cantidad" query-param="cantidad"/>
         <with-param name="cantidad_padre" query-param="cantidad_padre"/>
         <with-param name="num_orden_prod" query-param="num_orden_prod"/>
         <with-param name="reci_id" query-param="reci_id"/>
         <with-param name="etap_id" query-param="etap_id"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="forzar_agregar" query-param="forzar_agregar"/>
         <with-param name="arti_id" query-param="arti_id"/>
         <with-param name="prov_id" query-param="prov_id"/>
         <with-param name="fec_vencimiento" query-param="fec_vencimiento"/>
         <with-param name="recu_id" query-param="recu_id"/>
         <with-param name="tipo_recurso" query-param="tipo_recurso"/>
         <with-param name="planificado" query-param="planificado"/>
         <with-param name="batch_id" query-param="batch_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/batch/porrecipiente/{reci_id}">
      <call-query href="getBatchidPorRecipiente">
         <with-param name="reci_id" query-param="reci_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/lote/deposito/ingresar">
      <call-query href="ingresarLote">
         <with-param name="cantidad" query-param="cantidad"/>
         <with-param name="batch_id_origen" query-param="batch_id_origen"/>
         <with-param name="reci_id" query-param="reci_id"/>
         <with-param name="empre_id" query-param="empre_id"/>
         <with-param name="etap_id_deposito" query-param="etap_id_deposito"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="forzar_agregar" query-param="forzar_agregar"/>
         <with-param name="arti_id" query-param="arti_id"/>
         <with-param name="lote" query-param="lote"/>
      </call-query>
   </resource>
   <resource method="POST" path="/lote/recipiente/cambiar">
      <call-query href="cambiarLote2">
         <with-param name="batch_id_origen" query-param="batch_id_origen"/>
         <with-param name="reci_id" query-param="reci_id"/>
         <with-param name="empre_id" query-param="empre_id"/>
         <with-param name="etap_id_deposito" query-param="etap_id_deposito"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="forzar_agregar" query-param="forzar_agregar"/>
         <with-param name="cantidad" query-param="cantidad"/>
      </call-query>
   </resource>
   <resource method="GET" path="/lote/existencia/{batch_id_origen}">
      <call-query href="getExistencia">
         <with-param name="batch_id_origen" query-param="batch_id_origen"/>
      </call-query>
   </resource>
   <resource method="POST" path="cambiar&#x9;">
      <call-query href="cambiarLote">
         <with-param name="batch_id_origen" query-param="batch_id_origen"/>
         <with-param name="reci_id" query-param="reci_id"/>
         <with-param name="empre_id" query-param="empre_id"/>
         <with-param name="etap_id_deposito" query-param="etap_id_deposito"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="forzar_agregar" query-param="forzar_agregar"/>
      </call-query>
   </resource>
   <resource method="POST" path="cambiar">
      <call-query href="cambiarLote2">
         <with-param name="batch_id_origen" query-param="batch_id_origen"/>
         <with-param name="reci_id" query-param="reci_id"/>
         <with-param name="empre_id" query-param="empre_id"/>
         <with-param name="etap_id_deposito" query-param="etap_id_deposito"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="forzar_agregar" query-param="forzar_agregar"/>
      </call-query>
   </resource>
   <resource method="POST" path="/lote/list">
      <call-query href="loteSetV2_batch_req">
         <with-param name="lote_id" query-param="lote_id"/>
         <with-param name="arti_id" query-param="arti_id"/>
         <with-param name="prov_id" query-param="prov_id"/>
         <with-param name="batch_id_padre" query-param="batch_id_padre"/>
         <with-param name="cantidad" query-param="cantidad"/>
         <with-param name="cantidad_padre" query-param="cantidad_padre"/>
         <with-param name="num_orden_prod" query-param="num_orden_prod"/>
         <with-param name="reci_id" query-param="reci_id"/>
         <with-param name="etap_id" query-param="etap_id"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="forzar_agregar" query-param="forzar_agregar"/>
         <with-param name="fec_vencimiento" query-param="fec_vencimiento"/>
         <with-param name="recu_id" query-param="recu_id"/>
         <with-param name="tipo_recurso" query-param="tipo_recurso"/>
         <with-param name="planificado" query-param="planificado"/>
         <with-param name="batch_id" query-param="batch_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/transporte/movimiento/list/{tipo_movimiento}">
      <call-query href="getMovimientosTransporte">
         <with-param name="tipo_movimiento" query-param="tipo_movimiento"/>
      </call-query>
   </resource>
   <resource method="GET" path="/productos/etapa/{etapa}/desde/{fecdesde}/hasta/{fechasta}/producto/{producto}">
      <call-query href="getProduccion">
         <with-param name="etapa" query-param="etapa"/>
         <with-param name="fechasta" query-param="fechasta"/>
         <with-param name="fecdesde" query-param="fecdesde"/>
         <with-param name="producto" query-param="producto"/>
      </call-query>
   </resource>
   <resource method="GET" path="/productos/recurso/{recurso}/etapa/{etapa}/desde/{fecdesde}/hasta/{fechasta}/producto/{producto}">
      <call-query href="getProduccionPorRecurso">
         <with-param name="recurso" query-param="recurso"/>
         <with-param name="fechasta" query-param="fechasta"/>
         <with-param name="fecdesde" query-param="fecdesde"/>
         <with-param name="etapa" query-param="etapa"/>
         <with-param name="producto" query-param="producto"/>
      </call-query>
   </resource>
   <resource method="GET" path="/productos/list">
      <call-query href="getProductos"/>
   </resource>
   <resource method="GET" path="/etapas/all/list">
      <call-query href="getAllEtapas"/>
   </resource>
   <resource method="GET" path="/recursos/list">
      <call-query href="getRecursos"/>
   </resource>
</data>
