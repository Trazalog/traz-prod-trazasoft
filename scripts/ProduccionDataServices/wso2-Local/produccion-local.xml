<data enableBatchRequests="true" enableBoxcarring="true" name="ProduccionDataService" transports="http https local">
   <config enableOData="false" id="produccionDS">
      <property name="driverClassName">org.postgresql.Driver</property>
      <property name="url">jdbc:postgresql://pc-pc:5432/tools</property>
      <property name="username">postgres</property>
      <property name="password">admin24</property>
   </config>
   <query id="getEstablecimiento" useConfig="produccionDS">
      <sql>SELECT *&#xd; FROM&#xd;prd.establecimientos</sql>
      <result outputType="json">{&#xd; "establecimientos": {&#xd;      "establecimiento": [&#xd;        {&#xd;          "esta_id": "$esta_id",&#xd;          "nombre": "$nombre",&#xd;          "lng": "$lng",&#xd;          "lat": "$lat",&#xd;          "calle": "$calle",&#xd;          "altura": "$altura",&#xd;          "localidad": "$localidad",&#xd;          "estado": "$estado",&#xd;          "pais": "$pais",&#xd;          "fec_alta": "$fec_alta",&#xd;          "usuario": "$usuario"&#xd;        }&#xd;      ]&#xd; }&#xd;}</result>
   </query>
   <query id="getLote" useConfig="produccionDS">
      <sql>select RECI.reci_id, reci.nombre from prd.recipientes Reci, alm.alm_depositos Depo&#xd;where reci.depo_id = depo.depo_id and&#xd;depo.esta_id = CAST(:esta_id as INTEGER)</sql>
      <result outputType="json">{&#xd;"recipientes":&#xd;      {"recipiente":&#xd;        [&#xd;          {&#xd;          "id": "$reci_id",&#xd;          "titulo":"$nombre"&#xd;          }          &#xd;        ]&#xd;      }&#xd; }</result>
      <param name="esta_id" sqlType="STRING"/>
   </query>
   <query id="getEtapa" useConfig="produccionDS">
      <sql>select &#xd;   etap_id, nombre, nom_recipiente, fec_alta, usuario, proc_id &#xd;from &#xd;   prd.etapas &#xd;where eliminado = 0</sql>
      <result outputType="json">{&#xd;    "etapas":&#xd;      {"etapa":&#xd;        [&#xd;          {&#xd;            "id": "$etap_id",&#xd;            "titulo":"$nombre",&#xd;            "nom_recipiente": "$nom_recipiente",&#xd;            "fec_alta": "$fec_alta",&#xd;            "usuario": "$usuario",&#xd;            "proc_id": "$proc_id"           &#xd;          }&#xd;        ]&#xd;      }&#xd;  }</result>
   </query>
   <query id="getArticulos" useConfig="produccionDS">
      <sql>SELECT A.*, coalesce(sum(cantidad), 0) as stock&#xd;FROM alm.alm_articulos A&#xd;LEFT JOIN alm.alm_lotes C ON C.arti_id = A.arti_id&#xd;WHERE A.empr_id = 1&#xd;AND A.eliminado = FALSE&#xd;GROUP BY A.arti_id</sql>
      <result outputType="json">{&#xd;    "materias": {&#xd;        "materia": [&#xd;            {&#xd;                "id": "$arti_id",&#xd;                "barcode": "$barcode",&#xd;                "titulo": "$descripcion",&#xd;                "costo": "$costo",&#xd;                "cantidad_caja": "$cantidad_caja",&#xd;                "punto_pedido": "$punto_pedido",&#xd;                "estado": "$estado",&#xd;                "unidad_medida": "$unidad_medida",&#xd;                "es_loteado": "$es_loteado",&#xd;                "stock": "$stock"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
   </query>
   <query id="getArticulo" useConfig="produccionDS">
      <sql>SELECT A.*, coalesce(sum(cantidad), 0) as stock&#xd;FROM alm.alm_articulos A&#xd;LEFT JOIN alm.alm_lotes C ON C.arti_id = A.arti_id&#xd;WHERE A.empr_id = 1&#xd;AND A.eliminado = FALSE&#xd;AND A.arti_id = CAST(:arti_id as INTEGER)&#xd;GROUP BY A.arti_id</sql>
      <result outputType="json">{&#xd;    "articulos": {&#xd;        "articulo": [&#xd;            {&#xd;                "arti_id": "$arti_id",&#xd;                "barcode": "$barcode",&#xd;                "descripcion": "$descripcion",&#xd;                "costo": "$costo",&#xd;                "cantidad_caja": "$cantidad_caja",&#xd;                "punto_pedido": "$punto_pedido",&#xd;                "estado": "$estado",&#xd;                "unidad_medida": "$unidad_medida",&#xd;                "es_loteado": "$es_loteado",&#xd;                "stock": "$stock"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="arti_id" sqlType="STRING"/>
   </query>
   <query id="setArticulo" useConfig="produccionDS">
      <sql>INSERT INTO alm_articulos&#xd;(barcode, descripcion, es_caja, es_loteado, unidad_medida)&#xd;VALUES &#xd;(:barcode, :descripcion, CAST(:es_caja as INTERGER), CAST(:es_loteado as INTERGER), :unidad_medida)</sql>
      <param name="barcode" sqlType="STRING"/>
      <param name="descripcion" sqlType="STRING"/>
      <param name="es_caja" sqlType="STRING"/>
      <param name="es_loteado" sqlType="STRING"/>
      <param name="unidad_medida" sqlType="STRING"/>
   </query>
   <query id="setParametro" useConfig="produccionDS">
      <sql>INSERT INTO utl_tablas&#xd;(tabla, valor, descripcion)&#xd;VALUES&#xd;(:tabla, :valor, :descripcion)</sql>
      <param name="tabla" sqlType="STRING"/>
      <param name="valor" sqlType="STRING"/>
      <param name="descripcion" sqlType="STRING"/>
   </query>
   <query id="getEtapaPorId" useConfig="produccionDS">
      <sql>select &#xd;   E.etap_id, E.nombre, E.nom_recipiente, 'planificado' as estado, '' as fec_alta, &#xd;   '' as batch_id, '' as establecimiento, '' as num_orden_prod, '' as recipientes, '' as materias, '' as tareas&#xd;from &#xd;   prd.etapas E  &#xd;where &#xd;   E.etap_id = CAST(:etap_id AS INTEGER)&#xd;   and&#xd;   E.eliminado = 0</sql>
      <result outputType="json">{&#xd;  "etapa":&#xd;      {&#xd;        "id": "$etap_id",&#xd;        "lote":"$batch_id",&#xd;        "fecha":"$fec_alta",&#xd;        "titulo":"$nombre",&#xd;        "establecimiento":"$establecimiento",&#xd;        "recipiente":"$recipientes",&#xd;        "titulorecipiente":"$nom_recipiente",&#xd;        "estado":"$estado",&#xd;        "op":"$num_orden_prod",&#xd;        "materias":"$materias",&#xd;        "tareas":"$tareas"&#xd;      }&#xd;}</result>
      <param name="etap_id" sqlType="STRING"/>
   </query>
   <query id="getParametros" useConfig="produccionDS">
      <sql>SELECT * &#xd;FROM utl_tablas</sql>
      <result outputType="json">{&#xd; "parametros": {&#xd; "parametro": [&#xd; {&#xd; "valor": "$valor",&#xd; "descripcion": "$descripcion"&#xd; }&#xd; ]&#xd; }&#xd;}</result>
   </query>
   <query id="getProveedores" useConfig="produccionDS">
      <sql>SELECT * &#xd;FROM alm.alm_proveedores&#xd;WHERE&#xd;empr_id = CAST(:empr_id as INTEGER)&#xd;AND eliminado = FALSE</sql>
      <result outputType="json">{&#xd; "proveedores": {&#xd; "proveedor": [&#xd; {&#xd;"id":"$prov_id",&#xd;"titulo":"$nombre",&#xd;"cuit":"$cuit"&#xd; }&#xd; ]&#xd; }&#xd;}</result>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="setEntrada" useConfig="produccionDS">
      <sql>INSERT INTO prd.movimientos_trasportes&#xd;(boleta, fecha_entrada, patente, acoplado, conductor, tipo, bruto, tara, neto, prov_id, esta_id, reci_id)&#xd;VALUES&#xd;(:boleta, TO_DATE(:fecha,'YYYY-MM-DD'), :patente, :acoplado, :conductor, :tipo, CAST(:bruto as float8), CAST(:tara as float8), CAST(:neto as float8), CAST(:proveedor as INTEGER), CAST(:establecimiento as INTEGER), CAST(:reci_id as INTEGER))</sql>
      <param name="boleta" sqlType="STRING"/>
      <param name="patente" sqlType="STRING"/>
      <param name="acoplado" sqlType="STRING"/>
      <param name="conductor" sqlType="STRING"/>
      <param name="tipo" sqlType="STRING"/>
      <param name="bruto" sqlType="STRING"/>
      <param name="tara" sqlType="STRING"/>
      <param name="neto" sqlType="STRING"/>
      <param name="fecha" sqlType="STRING"/>
      <param name="proveedor" sqlType="STRING"/>
      <param name="establecimiento" sqlType="STRING"/>
      <param name="reci_id" sqlType="STRING"/>
   </query>
   <query id="setNotaPedido" keyColumns="pema_id" returnGeneratedKeys="true" useConfig="produccionDS">
      <sql>insert into alm.alm_pedidos_materiales(fecha, empr_id, batch_id) &#xd;values(TO_DATE(:fecha, 'YYYY-MM-DD'), CAST(:empr_id AS INTEGER), CAST(:batch_id AS INTEGER))</sql>
      <result outputType="json">{&#xd; "nota_id": { &#xd;   "pedido_id": "$pema_id" &#xd; }&#xd;}&#xd;&#xd;</result>
      <param name="fecha" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="batch_id" sqlType="STRING"/>
   </query>
   <query id="setDetaNotaPedido" useConfig="produccionDS">
      <sql>insert into alm.alm_deta_pedidos_materiales(pema_id, arti_id, cantidad) &#xd;values(CAST(:pema_id AS INTEGER), CAST(:arti_id AS INTEGER), CAST(:cantidad AS INTEGER))</sql>
      <param name="pema_id" sqlType="STRING"/>
      <param name="arti_id" sqlType="STRING"/>
      <param name="cantidad" sqlType="STRING"/>
   </query>
   <operation name="etapaxId">
      <call-query href="getEtapaPorId">
         <with-param name="etap_id" query-param="etap_id"/>
      </call-query>
   </operation>
   <resource method="GET" path="/establecimiento">
      <call-query href="getEstablecimiento"/>
   </resource>
   <resource method="GET" path="/lote/{esta_id}">
      <call-query href="getLote">
         <with-param name="esta_id" query-param="esta_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/etapa">
      <call-query href="getEtapa"/>
   </resource>
   <resource method="GET" path="/articulos">
      <call-query href="getArticulos"/>
   </resource>
   <resource method="GET" path="/articulos/{arti_id}">
      <call-query href="getArticulo">
         <with-param name="arti_id" query-param="arti_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/articulos">
      <call-query href="setArticulo">
         <with-param name="barcode" query-param="barcode"/>
         <with-param name="descripcion" query-param="descripcion"/>
         <with-param name="es_caja" query-param="es_caja"/>
         <with-param name="es_loteado" query-param="es_loteado"/>
         <with-param name="unidad_medida" query-param="unidad_medida"/>
      </call-query>
   </resource>
   <resource method="GET" path="/etapas/{etap_id}">
      <call-query href="getEtapaPorId">
         <with-param name="etap_id" query-param="etap_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/parametros">
      <call-query href="getParametros"/>
   </resource>
   <resource method="POST" path="/parametros">
      <call-query href="setParametro">
         <with-param name="tabla" query-param="tabla"/>
         <with-param name="valor" query-param="valor"/>
         <with-param name="descripcion" query-param="descripcion"/>
      </call-query>
   </resource>
   <resource method="GET" path="/proveedores/{empr_id}">
      <call-query href="getProveedores">
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/entradas">
      <call-query href="setEntrada">
         <with-param name="boleta" query-param="boleta"/>
         <with-param name="patente" query-param="patente"/>
         <with-param name="acoplado" query-param="acoplado"/>
         <with-param name="conductor" query-param="conductor"/>
         <with-param name="tipo" query-param="tipo"/>
         <with-param name="bruto" query-param="bruto"/>
         <with-param name="tara" query-param="tara"/>
         <with-param name="neto" query-param="neto"/>
         <with-param name="fecha" query-param="fecha"/>
         <with-param name="proveedor" query-param="proveedor"/>
         <with-param name="establecimiento" query-param="establecimiento"/>
         <with-param name="reci_id" query-param="reci_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/notapedido">
      <call-query href="setNotaPedido">
         <with-param name="fecha" query-param="fecha"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="batch_id" query-param="batch_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/notapedido/detalle">
      <call-query href="setDetaNotaPedido">
         <with-param name="pema_id" query-param="pema_id"/>
         <with-param name="arti_id" query-param="arti_id"/>
         <with-param name="cantidad" query-param="cantidad"/>
      </call-query>
   </resource>
</data>
